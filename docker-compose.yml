# docker-compose.yml
services:
  redis:
    image: redis:7
    profiles: ["infra"]
    ports:
      - "6379:6379" # כדי שהשירותים הלוקאליים ידברו ל-redis דרך localhost
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  mongodb:
    image: mongo:6
    profiles: ["infra"]
    ports:
      - "27017:27017" # כדי שהשירותים הלוקאליים ידברו ל-mongo דרך localhost
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    profiles: ["infra"]
    ports:
      - "5672:5672" # AMQP ללוקאל
      - "15672:15672" # UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  # האפליקציות - פרופיל app (לא עולות כברירת מחדל)
  gateway-api:
    profiles: ["app"]
    build:
      context: .
      dockerfile: services/gateway-api/Dockerfile
    ports:
      - "8181:8181"
    env_file:
      - ./.env.shared
      - ./services/gateway-api/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  engine:
    profiles: ["app"]
    build:
      context: .
      dockerfile: services/engine/Dockerfile
    env_file:
      - ./.env.shared
      - ./services/engine/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  auth-service:
    profiles: ["app"]
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    env_file:
      - ./.env.shared
      - ./services/auth-service/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  db-service:
    profiles: ["app"]
    build:
      context: .
      dockerfile: services/db-service/Dockerfile
    env_file:
      - ./.env.shared
      - ./services/db-service/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  mail-service:
    profiles: ["app"]
    build:
      context: .
      dockerfile: services/mail-service/Dockerfile
    env_file:
      - ./.env.shared
      - ./services/mail-service/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
  mongo_data:
  rabbitmq_data:

networks:
  default:
    name: bridgepoint_net
